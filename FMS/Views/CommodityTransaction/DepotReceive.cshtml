@model FMS.Models.CommodityTransaction
@{
    ViewBag.Title = "Depot Shipments - Receive Shipment from Flour Mill (Shipments Sent by Flour Mill to Depot)";
}

<div class="title">
    @ViewBag.Title
    <div class="float-right">
        @Html.ActionLink("Back to List", "Depot", null, new { @class = "btn btn-info" })
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
    @Html.HiddenFor(model => model.CommodityTransactionId)
    
    <table class="table2columns">
        <tr>
            <td>
                <div class="form-horizontal">
                    
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.CompositeKey, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.CompositeKey)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                        </div>
                    </div>
                   *@

                    <div class="form-group">
                        @Html.LabelFor(model => model.DispatchDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.DispatchDate)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FromPlaceId, "From", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.FromPlace.Name)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ToPlaceId, "To", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.ToPlace.Name)
                        </div>
                    </div>

                   <div class="form-group">
                        @Html.LabelFor(model => model.CommodityTypeId, "Commodity Type", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.CommodityType.Name)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Trucks, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Trucks)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Bags, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Bags)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Quantity)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UnitId, "Units", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Unit.Name)
                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Rate)
                        </div>
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.IssuingOfficerId, "Issuing Officer", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.IssuingOfficer.Name)
                        </div>
                    </div>
                </div>

            </td>
            <td>
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.BookNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.BookNumber)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.VoucherNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.VoucherNo)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ContractorId, "Contractor", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Contractor.Place.Name)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ReceiveDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ReceiveDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ReceiveDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BagsReceived, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BagsReceived, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BagsReceived, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.QuantityReceived, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.QuantityReceived, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.QuantityReceived, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ShortageTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ShortageTypeId", null, "-- No Shortage --", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ShortageTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ReasonsForShortage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ReasonsForShortage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ReasonsForShortage, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ReceivingOfficerId, "Receiving Officer", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("ReceivingOfficerId", null, "-- Select Receiving Officer --", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ReceivingOfficerId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="RECEIVE" class="btn btn-primary" /> |
                            @Html.ActionLink("Cancel", "Depot")
                        </div>
                    </div>
                </div>
            </td>
        </tr>
    </table>


}

<div>
    @Html.ActionLink("Back to List", "Depot")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@Html.Partial("_PageCloseAlert")
}
